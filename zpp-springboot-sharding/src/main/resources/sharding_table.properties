server.port=9000

spring.main.allow-bean-definition-overriding=true

sharding.jdbc.datasource.names=shard0,shard1

sharding.jdbc.datasource.shard0.type=com.zaxxer.hikari.HikariDataSource
sharding.jdbc.datasource.shard0.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.shard0.jdbc-url=jdbc:mysql://localhost:3306/shard0?characterEncoding=utf-8&serverTimezone=GMT%2B8
sharding.jdbc.datasource.shard0.username=root
sharding.jdbc.datasource.shard0.password=123456

sharding.jdbc.datasource.shard1.type=com.zaxxer.hikari.HikariDataSource
sharding.jdbc.datasource.shard1.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.shard1.jdbc-url=jdbc:mysql://localhost:3306/shard1?characterEncoding=utf-8&serverTimezone=GMT%2B8
sharding.jdbc.datasource.shard1.username=root
sharding.jdbc.datasource.shard1.password=123456

# 水平拆分的数据库（表）
# 分库策略
sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=id
sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=shard$->{id % 2}

# 分表策略
# 逻辑表：user
sharding.jdbc.config.sharding.tables.user.actual-data-nodes=shard$->{0..1}.user_$->{0..1}
# 分表主要取决于age行
sharding.jdbc.config.sharding.tables.user.table-strategy.inline.sharding-column=age

# 分片算法表达式
sharding.jdbc.config.sharding.tables.user.table-strategy.inline.algorithm-expression=user_$->{age % 2}

# 主键 UUID 18位数 如果是分布式还要进行一个设置 防止主键重复
#sharding.jdbc.config.sharding.tables.user.key-generator-column-name=id

sharding.jdbc.config.props..sql.show=true
